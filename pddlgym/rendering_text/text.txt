<OrderEnforcing<PDDLEnv<PDDLEnvBlocks-v0>>>
Instantiating FD with --alias seq-opt-lmcut
Plan: [pickup(b:block), stack(b:block,a:block), pickup(c:block), stack(c:block,b:block), pickup(d:block), stack(d:block,c:block)]
Statistics: {'num_node_expansions': 14, 'search_time': 0.000381, 'total_time': 0.001655, 'plan_length': 6, 'plan_cost': 6}
================================================================================
Observation: State(literals=frozenset({ontable(b:block), clear(d:block), ontable(c:block), clear(b:block), handempty(robot:robot), ontable(a:block), ontable(d:block), clear(c:block), clear(a:block)}), objects=frozenset({b:block, robot:robot, c:block, d:block, a:block}), goal=AND[on(d:block,c:block), on(c:block,b:block), on(b:block,a:block)])
[Domain Objects] a:block, b:block, c:block, d:block, robot:robot [Goal] b:block is on top of a:block, c:block is on top of b:block, d:block is on top of c:block [Current Observation] a:block is clear, a:block is on the table, b:block is clear, b:block is on the table, c:block is clear, c:block is on the table, d:block is clear, d:block is on the table, the robot's hand is empty
Action space: 4
Action: pickup(b:block)
================================================================================
Observation: State(literals=frozenset({clear(d:block), ontable(c:block), ontable(a:block), ontable(d:block), holding(b:block), clear(c:block), handfull(robot:robot), clear(a:block)}), objects=frozenset({b:block, robot:robot, c:block, d:block, a:block}), goal=AND[on(d:block,c:block), on(c:block,b:block), on(b:block,a:block)])
[Domain Objects] a:block, b:block, c:block, d:block, robot:robot [Goal] b:block is on top of a:block, c:block is on top of b:block, d:block is on top of c:block [Current Observation] a:block is clear, a:block is on the table, c:block is clear, c:block is on the table, d:block is clear, d:block is on the table, the robot is holding b:block, the robot's hand is full
Action space: 4
Action: stack(b:block,a:block)
================================================================================
Observation: State(literals=frozenset({clear(d:block), ontable(c:block), clear(b:block), handempty(robot:robot), ontable(a:block), ontable(d:block), clear(c:block), on(b:block,a:block)}), objects=frozenset({b:block, robot:robot, c:block, d:block, a:block}), goal=AND[on(d:block,c:block), on(c:block,b:block), on(b:block,a:block)])
[Domain Objects] a:block, b:block, c:block, d:block, robot:robot [Goal] b:block is on top of a:block, c:block is on top of b:block, d:block is on top of c:block [Current Observation] a:block is on the table, b:block is clear, b:block is on top of a:block, c:block is clear, c:block is on the table, d:block is clear, d:block is on the table, the robot's hand is empty
Action space: 3
Action: pickup(c:block)
================================================================================
Observation: State(literals=frozenset({ontable(a:block), ontable(d:block), clear(d:block), handfull(robot:robot), on(b:block,a:block), clear(b:block), holding(c:block)}), objects=frozenset({b:block, robot:robot, c:block, d:block, a:block}), goal=AND[on(d:block,c:block), on(c:block,b:block), on(b:block,a:block)])
[Domain Objects] a:block, b:block, c:block, d:block, robot:robot [Goal] b:block is on top of a:block, c:block is on top of b:block, d:block is on top of c:block [Current Observation] a:block is on the table, b:block is clear, b:block is on top of a:block, d:block is clear, d:block is on the table, the robot is holding c:block, the robot's hand is full
Action space: 3
Action: stack(c:block,b:block)
================================================================================
Observation: State(literals=frozenset({ontable(a:block), ontable(d:block), clear(d:block), clear(c:block), on(c:block,b:block), on(b:block,a:block), handempty(robot:robot)}), objects=frozenset({b:block, robot:robot, c:block, d:block, a:block}), goal=AND[on(d:block,c:block), on(c:block,b:block), on(b:block,a:block)])
[Domain Objects] a:block, b:block, c:block, d:block, robot:robot [Goal] b:block is on top of a:block, c:block is on top of b:block, d:block is on top of c:block [Current Observation] a:block is on the table, b:block is on top of a:block, c:block is clear, c:block is on top of b:block, d:block is clear, d:block is on the table, the robot's hand is empty
Action space: 2
Action: pickup(d:block)
================================================================================
Observation: State(literals=frozenset({ontable(a:block), clear(c:block), on(c:block,b:block), on(b:block,a:block), handfull(robot:robot), holding(d:block)}), objects=frozenset({b:block, robot:robot, c:block, d:block, a:block}), goal=AND[on(d:block,c:block), on(c:block,b:block), on(b:block,a:block)])
[Domain Objects] a:block, b:block, c:block, d:block, robot:robot [Goal] b:block is on top of a:block, c:block is on top of b:block, d:block is on top of c:block [Current Observation] a:block is on the table, b:block is on top of a:block, c:block is clear, c:block is on top of b:block, the robot is holding d:block, the robot's hand is full
Action space: 2
Action: stack(d:block,c:block)
Plan: [pickup(b:block), stack(b:block,a:block), pickup(c:block), stack(c:block,b:block), pickup(d:block), stack(d:block,c:block)]